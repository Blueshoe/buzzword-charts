apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "buzzword-counter.fullname" . }}-web
  labels:
    {{- include "buzzword-counter.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "buzzword-counter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "buzzword-counter.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "buzzword-counter.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ include "buzzword-counter.fullname" . }}-migrate
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["python", "manage.py", "migrate"]
          envFrom:
            - configMapRef:
                name: globalenv-configmap
          env:
            {{- include "buzzword-counter.envVariables" . | nindent 12 }}
            - name: DJANGO_RUN_ENV
              value: web
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: globalenv-configmap
          env:
            {{- include "buzzword-counter.envVariables" . | nindent 12 }}
            - name: DJANGO_RUN_ENV
              value: web
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "buzzword-counter.fullnameWorker" . }}
  labels:
    {{- include "buzzword-counter.labelsWorker" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "buzzword-counter.selectorLabelsWorker" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "buzzword-counter.selectorLabelsWorker" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "buzzword-counter.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            exec:
              # bash is needed to replace the environment variable
              command: [
                "bash",
                "-c",
                "celery inspect ping -A dll.configuration.celery.app -d celery@$HOSTNAME"
              ]
            initialDelaySeconds: 30  # startup takes some time
            periodSeconds: 60  # default is quite often and celery uses a lot cpu/ram then.
            timeoutSeconds: 10  # default is too low
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: globalenv-configmap
          env:
            {{- include "buzzword-counter.envVariables" . | nindent 12 }}
            - name: DJANGO_RUN_ENV
              value: worker
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
