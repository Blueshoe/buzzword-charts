apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "buzzword-counter.fullname" . }}-web
  labels:
    {{- include "buzzword-counter.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "buzzword-counter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "buzzword-counter.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "buzzword-counter.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ include "buzzword-counter.fullname" . }}-migrate
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["python", "manage.py", "migrate"]
          envFrom:
            - configMapRef:
                name: globalenv-configmap
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh","-c"]
          args: ["python manage.py serve
                  --command 'collectstatic --no-input'
                  --port {{ .Values.service.port }}
                  --probe-port 9001
                  --static
                 "]
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /alive
              port: 9001
            periodSeconds: 10
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: 9001
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /startup
              port: 9001
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: globalenv-configmap
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "buzzword-counter.fullnameWorker" . }}
  labels:
    {{- include "buzzword-counter.labelsWorker" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "buzzword-counter.selectorLabelsWorker" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "buzzword-counter.selectorLabelsWorker" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "buzzword-counter.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          command: ["/bin/sh","-c"]
          args: ["celery worker
                  -l $CELERY_LOG_LEVEL
                  -A buzzword_counter.configuration.celery.app
                  --workdir /code/
                  --uid $CELERY_UID
                  --gid $CELERY_GID
                  -O fair
                 "]
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: globalenv-configmap
          env:
            - name: DJANGO_RUN_ENV
              value: worker
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
